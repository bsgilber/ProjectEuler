def makeList(n : Int): List[Int] = {
	var l = List[Int]()
	var i = 0
	var j = n
	while (i < n) {
		l = l :+ 1
		i += 1
	}
	while (j < n*n){
		if (j % n == 0) l = l :+ 1
		else l = l :+ 0
		j += 1
	} 
	l
}

def countPaths(sqList : List[Int], n : Int): Long = {
	var i = 0
	var tempList = List[Long]()
	while (i < sqList.length){
		if (sqList(i) == 1) {
		tempList = tempList :+ 1L
		}
		else {
		tempList = tempList :+ (tempList(i-1) + tempList(i - n))
		}
		i += 1
	}
	println(tempList)
	tempList.last
}
